{
    "levels": [
        {
            "id": "2",
            "category": "Simple commands",
            "name": "1. Moving forward",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "Move the car to the finish line using the moveForward() function.",
            "start": [3, 0],
            "end": [0, 0],
            "defaultCode": "// Write your CarLang code here, then press \"Check code\" to\n// check your code or \"Play\" to play your code.\nmoveForward();",
            "rows": [
                ["1010"],
                ["1010"],
                ["1010"],
                ["1010"]
            ]
        },
        {
            "id": "3",
            "category": "Simple commands",
            "name": "2. Turing your car around",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "Move the car to the finish line using the moveForward(), turnRight(), and turnLeft() functions.",
            "start": [3, 1],
            "end": [0, 0],
            "defaultCode": "",
            "rows": [
                ["0010", "0000", "0000", "0000"],
                ["1100", "0011", "0000", "0000"],
                ["0000", "1010", "0000", "0000"],
                ["0000", "1000", "0000", "0000"]
            ]
        },
        {
            "id": "4",
            "category": "Simple commands",
            "name": "3. Honk your way out of it",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "Get to the finish, but oh no! A cow is blocking the road. Try honking when you're close, using honk().",
            "start": [4, 1],
            "end": [4, 2],
            "defaultCode": "",
            "rows": [
                ["0000", "0110", "0011", "0000", "0000"],
                ["0000", "1010", "1010", "0000", "0000"],
                ["0000", "1010", "1010", "0000", "0000"],
                ["0000", "1010", "1010", "0000", "0000"],
                ["0000", "1000", "1000", "0000", "0000"]
            ],
            "cows": [
                {
                    "defaultX": 1,
                    "defaultY": 1,
                    "secondaryX": 2,
                    "secondaryY": 1,
                    "currentX": 1,
                    "currentY": 1
                }
            ]
        },
        {
            "id": "5",
            "category": "Loops",
            "name": "1. For-ever?",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "A good programmer is a lazy programmer. This level is a good example of that. The car should move forward until it gets to the finish line. However, we don't want to write the same line of code over and over again. So, we'll use a for-loop to move the car forward 10 times. Change the existing code, to move the car forward 10 times, instead of honking three times.",
            "start": [9, 0],
            "end": [0, 0],
            "defaultCode": "for(int i = 0; i < 3; i = i + 1) {\n    honk();\n}",
            "rows": [
                ["1010"],
                ["1010"],
                ["1010"],
                ["1010"],
                ["1010"],
                ["1010"],
                ["1010"],
                ["1010"],
                ["1010"],
                ["1010"]
            ]
        },
        {
            "id": "6",
            "category": "Loops",
            "name": "2. While it lasts",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "This time, we want the car to move forward as long as it can. When it reaches the corner, we turn right. Use the while and moveForward() again to make sure the care reaches the finish.",
            "start": [3, 0],
            "end": [0, 3],
            "defaultCode": "while(isRoadAhead()) {\n    moveForward();\n}\n\nturnRight();\n\n// Add another while-block",
            "rows": [
                ["0110", "0101", "0101", "0001"],
                ["1010", "0000", "0000", "0000"],
                ["1010", "0000", "0000", "0000"],
                ["1000", "0000", "0000", "0000"]
            ],
            "cows": []
        },
        {
            "id": "7",
            "category": "Amazing Mazes",
            "name": "A star is born",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "Find your way to the finish",
            "start": [9, 0],
            "end": [0, 9],
            "defaultCode": "// Good luck with that!",
            "rows": [
                ["0110", "0101", "0101", "0101", "0101", "0101", "0101", "0101", "0101", "0011"],
                ["1100", "0011", "0100", "0111", "0011", "0110", "0101", "0101", "0011", "1010"],
                ["0010", "1100", "0111", "1001", "1000", "1100", "0101", "0011", "1010", "1010"],
                ["1110", "0101", "1001", "0110", "0101", "0101", "0011", "1010", "1010", "1010"],
                ["1100", "0011", "0010", "1010", "0100", "0011", "1010", "1010", "1010", "1010"],
                ["0010", "1010", "1010", "1100", "0011", "1010", "1100", "1001", "1010", "1010"],
                ["1110", "1001", "1100", "0011", "1010", "1100", "0111", "0101", "1001", "1010"],
                ["1010", "0110", "0111", "1001", "1100", "0011", "1100", "0011", "0110", "1011"],
                ["1100", "1001", "1000", "0110", "0011", "1010", "0010", "1010", "1000", "1010"],
                ["0100", "0101", "0101", "1001", "1100", "1001", "1100", "1101", "0101", "1001"]
            ],
            "cows": []
        },
        {
            "id": "1",
            "category": "Showcase",
            "name": "Level 1 - A showcase",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "This is a showcase level that implements all current CarLang features: comments, variables, for- and while-loops, if, else if, else, operators and function-calls. It has a syntax and error-checking system (press play now to see an error, remove the first line of code to fix it) and shows which line is being executed.",
            "start": [3, 1],
            "end": [0, 1],
            "defaultCode": "// UncommentThisLineToCauseAnError();\nvoid honkAndMove() {\n    if(isCowAhead()) {\n        honk();\n    }\n    moveForward();\n}\n\nint runs = 0;\nwhile(true) {\n    if (isRoadAhead()) {\n        // Test comment\n        honkAndMove();\n        if(runs == 0) {\n            moveBackward();\n        } else if(runs == 1){\n            for(int i = 0; i < 4; i = i + 1) {\n                turnRight();\n            }\n        }\n        runs = runs + 1;\n    } else {\n        turnRight();\n    }\n}",
            "rows": [
                ["0000", "0010", "0000"],
                ["0000", "1010", "0000"],
                ["0000", "1010", "0000"],
                ["0000", "1000", "0000"]
            ],
            "cows": [
                {
                    "defaultX": 1,
                    "defaultY": 1,
                    "secondaryX": 2,
                    "secondaryY": 1,
                    "currentX": 1,
                    "currentY": 1
                }
            ]
        },
        {
            "id": "8",
            "category": "OOP Introduction",
            "name": "Multi-Car Test",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "This level has multiple cars! Use 'redCar.moveForward()' and 'blueCar.turnRight()' to control specific cars.",
            "cars": [
                {
                    "name": "redCar",
                    "type": "red",
                    "position": [3, 0],
                    "direction": "N"
                },
                {
                    "name": "blueCar",
                    "type": "blue", 
                    "position": [3, 2],
                    "direction": "N"
                }
            ],
            "end": [0, 1],
            "defaultCode": "// This level has multiple cars!\n// Use 'redCar.moveForward()' and 'blueCar.turnRight()'\nredCar.moveForward();\nblueCar.moveForward();",
            "rows": [
                ["1010", "1010", "1010"],
                ["1010", "1010", "1010"],
                ["1010", "1010", "1010"],
                ["1010", "1010", "1010"]
            ]
        },
        {
            "id": "9",
            "category": "OOP Introduction",
            "name": "Car Coordination",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "Coordinate two cars to reach the finish. The red car needs to move first, then the blue car.",
            "cars": [
                {
                    "name": "redCar",
                    "type": "red",
                    "position": [3, 0],
                    "direction": "N"
                },
                {
                    "name": "blueCar",
                    "type": "blue", 
                    "position": [3, 1],
                    "direction": "N"
                }
            ],
            "end": [0, 0],
            "defaultCode": "// Coordinate the cars to reach the finish\n// Red car goes first, then blue car\nredCar.moveForward();\nredCar.moveForward();\nredCar.moveForward();\nblueCar.moveForward();\nblueCar.moveForward();\nblueCar.moveForward();",
            "rows": [
                ["1010", "1010"],
                ["1010", "1010"],
                ["1010", "1010"],
                ["1010", "1010"]
            ]
        },
        {
            "id": "10",
            "category": "OOP Introduction",
            "name": "Four Car Race",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "Control four cars in a race! Each car has a different color and starting position. Use 'redCar.moveForward()', 'blueCar.turnRight()', etc.",
            "cars": [
                {
                    "name": "redCar",
                    "type": "red",
                    "position": [3, 0],
                    "direction": "N"
                },
                {
                    "name": "blueCar",
                    "type": "blue", 
                    "position": [3, 1],
                    "direction": "N"
                },
                {
                    "name": "greenCar",
                    "type": "green",
                    "position": [3, 2],
                    "direction": "N"
                },
                {
                    "name": "yellowCar",
                    "type": "yellow",
                    "position": [3, 3],
                    "direction": "N"
                }
            ],
            "end": [0, 1],
            "defaultCode": "// Race all four cars to the finish!\nredCar.moveForward();\nblueCar.moveForward();\ngreenCar.moveForward();\nyellowCar.moveForward();\n\nredCar.moveForward();\nblueCar.moveForward();\ngreenCar.moveForward();\nyellowCar.moveForward();\n\nredCar.moveForward();\nblueCar.moveForward();\ngreenCar.moveForward();\nyellowCar.moveForward();",
            "rows": [
                ["1010", "1010", "1010", "1010"],
                ["1010", "1010", "1010", "1010"],
                ["1010", "1010", "1010", "1010"],
                ["1010", "1010", "1010", "1010"]
            ]
        },
        {
            "id": "11",
            "category": "OOP Introduction",
            "name": "Car Maze Coordination",
            "author": "sdRacer",
            "WinCondition": "IsAtFinish()",
            "Instructions": "Navigate two cars through a maze. The red car needs to go left, the blue car needs to go right. Use loops and conditions!",
            "cars": [
                {
                    "name": "redCar",
                    "type": "red",
                    "position": [3, 0],
                    "direction": "N"
                },
                {
                    "name": "blueCar",
                    "type": "blue", 
                    "position": [3, 2],
                    "direction": "N"
                }
            ],
            "end": [0, 1],
            "defaultCode": "// Navigate both cars through the maze\n// Red car goes left path, blue car goes right path\n\n// Red car path\nredCar.moveForward();\nredCar.turnLeft();\nredCar.moveForward();\nredCar.moveForward();\nredCar.turnRight();\nredCar.moveForward();\n\n// Blue car path\nblueCar.moveForward();\nblueCar.turnRight();\nblueCar.moveForward();\nblueCar.moveForward();\nblueCar.turnLeft();\nblueCar.moveForward();",
            "rows": [
                ["1010", "0000", "1010"],
                ["1000", "0000", "1000"],
                ["1010", "0000", "1010"],
                ["1010", "1010", "1010"]
            ]
        }
    ]
}